{"version":3,"sources":["components/Navbar/Drawer/index.js","components/Navbar/index.js","components/Footer/index.js","_types/index.js","_api/request.js","_api/index.js","_actions/pokeListActions.js","components/PokeList/index.js","views/Home/index.js","components/TypeList/index.js","views/Types/index.js","_actions/typeListActions.js","components/PokeCard/index.js","views/PokeItem/index.js","_actions/pokeItemActions.js","App.js","serviceWorker.js","_reducers/pokeListReducer.js","_reducers/pokeItemReducer.js","_reducers/typeListReducer.js","_reducers/index.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","link","color","textDecoration","AppDrawer","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","preventDefault","map","Fragment","Button","onClick","style","fill","Drawer","onClose","className","clsx","role","onKeyDown","List","Link","href","ListItem","button","ListItemIcon","ListItemText","primary","Divider","target","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","props","AppBar","position","Toolbar","Typography","variant","marginTop","textAlign","ButtonAppBar","request","axios","create","baseURL","timeout","headers","loadPokeListRequest","limit","offset","a","get","then","res","catch","error","response","data","loadPokeItemRequest","id","loadTypeListRequest","loadPokeListByTypeRequest","PokeList","byType","page","getId","text","l","length","tmp","substring","n","lastIndexOf","component","undefined","formatList","forEach","item","i","push","pokemon","results","getList","name","url","maxWidth","marginButtom","margin","backgroundColor","palette","background","paper","controls","display","flexDirection","flex","connect","pokeList","pokeListReducer","message","loadPokeList","dispatch","status","types","payload","loadPokeListByType","getType","url_string","window","location","URL","searchParams","setPage","setByType","useEffect","parseInt","loadPage","disabled","len","lockNext","TypeList","marginBottom","typeList","typeListReducer","loadTypeList","media","height","PokeCard","image","abilities","Card","CardActionArea","CardMedia","CardContent","gutterBottom","e","ability","CardActions","t","size","pokeItem","pokeItemReducer","loadPokeItem","isNaN","loadItem","sprites","front_default","App","exact","path","render","Boolean","hostname","match","initialState","action","newState","combineReducers","store","createStore","reducer","applyMiddleware","thunk","WebApp","navigator","serviceWorker","ready","registration","unregister","console","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7ae38885.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Link from '@material-ui/core/Link';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AdbIcon from '@material-ui/icons/Adb';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    link: {\r\n        color: '#222',\r\n        textDecoration: 'none',\r\n    }\r\n});\r\n\r\nconst AppDrawer = () => {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const preventDefault = (event) => {\r\n        // event.preventDefault()\r\n        // console.log(event)\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list, {\r\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n            })}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <Link\r\n                    className={classes.link}\r\n                    href=\"/\"\r\n                    onClick={preventDefault}\r\n                >\r\n                    <ListItem button key={'home'}>\r\n                        <ListItemIcon><HomeIcon /></ListItemIcon>\r\n                        <ListItemText primary={'Home'} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link\r\n                    className={classes.link}\r\n                    href=\"/types\"\r\n                    onClick={preventDefault}\r\n                >\r\n                    <ListItem button key={'types'}>\r\n                        <ListItemIcon><AdbIcon /></ListItemIcon>\r\n                        <ListItemText primary={'Pokemon Types'} />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <Link\r\n                    className={classes.link}\r\n                    href=\"https://github.com/aelhani\"\r\n                    onClick={preventDefault}\r\n                    target=\"_blank\"\r\n                >\r\n                    <ListItem button key={'github'}>\r\n                        <ListItemIcon><GitHubIcon /></ListItemIcon>\r\n                        <ListItemText primary={'Github'} />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {['left'].map((anchor) => (\r\n                <React.Fragment key={anchor}>\r\n                    <Button onClick={toggleDrawer(anchor, true)}>\r\n                        <MenuIcon style={{ fill: \"white\" }} />\r\n                    </Button>\r\n                    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n                        {list(anchor)}\r\n                    </Drawer>\r\n                </React.Fragment>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppDrawer;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport Drawer from './Drawer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    color: '#222',\r\n    textDecoration: 'none',\r\n  }\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const preventDefault = (event) => {\r\n    // event.preventDefault()\r\n    // console.log(event)\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Drawer />\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            HireMe Coding Challenge\r\n          </Typography>\r\n          <Link\r\n            className={classes.link}\r\n            href=\"https://github.com/aelhani\"\r\n            onClick={preventDefault}\r\n            target=\"_blank\"\r\n          >\r\n            <Button color=\"inherit\"><GitHubIcon style={{ fill: \"white\" }} /></Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 20,\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"caption\" className={classes.title}>\r\n                            2020 <span>&#169;</span> Abderrazak Elhani\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","export default {\r\n    LOAD_POKELIST_SUCCESS: 'LOAD_POKELIST_SUCCESS',\r\n    LOAD_POKELIST_FAILURE: 'LOAD_POKELIST_FAILURE',\r\n    \r\n    LOAD_POKEITEM_SUCCESS: 'LOAD_POKEITEM_SUCCESS',\r\n    LOAD_POKEITEM_FAILURE: 'LOAD_POKEITEM_FAILURE',\r\n\r\n    LOAD_TYPELIST_SUCCESS: 'LOAD_TYPELIST_SUCCESS',\r\n    LOAD_TYPELIST_FAILURE: 'LOAD_TYPELIST_FAILURE',\r\n\r\n    LOAD_POKELISTBYTYPE_SUCCESS: 'LOAD_POKELISTBYTYPE_SUCCESS',\r\n    LOAD_POKELISTBYTYPE_FAILURE: 'LOAD_POKELISTBYTYPE_FAILURE',\r\n}\r\n","import axios from 'axios'\r\n\r\nconst baseURL = \"https://pokeapi.co/api/v2/\"\r\n\r\nconst request = axios.create({\r\n    baseURL,\r\n    timeout: 20000,\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\nexport default request","import request from './request'\r\n\r\nexport async function loadPokeListRequest(limit, offset) {\r\n    return await request.get(`/pokemon?limit=${limit}&offset=${offset}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(error => {\r\n            return error.response.data\r\n        })\r\n}\r\n\r\nexport async function loadPokeItemRequest(id) {\r\n    return await request.get(`/pokemon/${id}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(error => {\r\n            return error.response.data\r\n        })\r\n}\r\n\r\nexport async function loadTypeListRequest() {\r\n    return await request.get(`/type`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(error => {\r\n            return error.response.data\r\n        })\r\n}\r\n\r\nexport async function loadPokeListByTypeRequest(id) {\r\n    return await request.get(`/type/${id}`)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(error => {\r\n            return error.response.data\r\n        })\r\n}\r\n","import types from '../_types'\r\n\r\nimport { loadPokeListRequest, loadPokeListByTypeRequest } from '../_api'\r\n\r\nexport const loadPokeList = (limit, offset) => async dispatch => {\r\n    const response = await loadPokeListRequest(limit, 20 * offset)\r\n    if (response.status === 200) {\r\n        dispatch({ type: types.LOAD_POKELIST_SUCCESS, payload: response.data })\r\n    }\r\n    else\r\n        dispatch({ type: types.LOAD_POKELIST_FAILURE, payload: response })\r\n}\r\n\r\nexport const loadPokeListByType = (type) => async dispatch => {\r\n    const response = await loadPokeListByTypeRequest(type)\r\n    if (response.status === 200) {\r\n        dispatch({ type: types.LOAD_POKELISTBYTYPE_SUCCESS, payload: response.data })\r\n    }\r\n    else\r\n        dispatch({ type: types.LOAD_POKELISTBYTYPE_FAILURE, payload: response })\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AdbIcon from '@material-ui/icons/Adb';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        color: '#222',\r\n        textDecoration: 'none',\r\n    }\r\n});\r\n\r\nconst PokeList = ({ list, byType, page }) => {\r\n    const classes = useStyles();\r\n\r\n    function getId(text) {\r\n        let l = text.length\r\n        let tmp = text.substring(0, l - 1)\r\n        let n = tmp.lastIndexOf(\"/\")\r\n        let id = tmp.substring(n + 1)\r\n        return id\r\n    }\r\n\r\n    const getList = () => {\r\n        if (byType) {\r\n            let formatList = []\r\n            list.forEach((item, i) => {\r\n                if (i >= page * 20 && i < (page + 1) * 20)\r\n                    formatList.push(item.pokemon)\r\n            })\r\n            return formatList\r\n        }\r\n        return list.results\r\n    }\r\n\r\n    return (\r\n        <List component=\"nav\" >\r\n            {list !== undefined && getList().map((pokemon, i) => {\r\n                return (\r\n                    <React.Fragment key={`${i}-${pokemon.name}`} >\r\n                        <Divider />\r\n                        <Link\r\n                            href={`/pokemon/${getId(pokemon.url)}`}\r\n                            className={classes.link}\r\n                        >\r\n                            <ListItem button >\r\n                                <ListItemIcon>\r\n                                    <AdbIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={pokemon.name} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </React.Fragment>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default PokeList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { loadPokeList, loadPokeListByType } from '../../_actions'\r\n\r\nimport PokeList from '../../components/PokeList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        marginTop: 20,\r\n        marginButtom: 20,\r\n        margin: 'auto',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    controls: {\r\n        width: '100%',\r\n        maxWidth: 280,\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    page: {\r\n        flex: 1,\r\n        textAlign: 'center'\r\n    },\r\n}));\r\n\r\nconst Home = (props) => {\r\n    const classes = useStyles();\r\n\r\n    function getType() {\r\n        let url_string = window.location.href\r\n        let url = new URL(url_string);\r\n        let type = url.searchParams.get(\"type\");\r\n        return type;\r\n    }\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [byType, setByType] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (getType() !== null && parseInt(getType()) > 0) {\r\n            props.loadPokeListByType(getType())\r\n            setByType(true);\r\n        }\r\n        else {\r\n            props.loadPokeList(20, page)\r\n            setByType(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page]);\r\n\r\n    const loadPage = (n) => {\r\n        if (page + n >= 0) {\r\n            setPage(page + n);\r\n        }\r\n    }\r\n\r\n    function lockNext() {\r\n        let len = 0\r\n        if (props.pokeList !== null)\r\n            len = props.pokeList.length\r\n        return (page + 1) * 20 >= len\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.controls}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    disabled={page === 0}\r\n                    onClick={() => loadPage(-1)}\r\n                >\r\n                    {\"<\"}\r\n                </Button>\r\n                <Typography variant=\"h6\" className={classes.page}>\r\n                    {`PAGE ${page + 1}`}\r\n                </Typography>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => loadPage(1)}\r\n                    disabled={lockNext() && byType}\r\n                >\r\n                    {\">\"}\r\n                </Button>\r\n            </div>\r\n            {props.pokeList !== null && <PokeList page={page} byType={byType} list={props.pokeList} />}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        pokeList: state.pokeListReducer.data,\r\n        message: state.pokeListReducer.message,\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { loadPokeList, loadPokeListByType })(Home)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        color: '#222',\r\n        textDecoration: 'none',\r\n    }\r\n});\r\n\r\nconst TypeList = ({ list }) => {\r\n    const classes = useStyles();\r\n\r\n    function getId(text) {\r\n        let l = text.length\r\n        let tmp = text.substring(0, l - 1)\r\n        let n = tmp.lastIndexOf(\"/\")\r\n        let id = tmp.substring(n + 1)\r\n        return id\r\n    }\r\n\r\n    return (\r\n        <List component=\"nav\" >\r\n            {list !== undefined && list.map((type, i) => {\r\n                return (\r\n                    <React.Fragment key={`${i}-${type.name}`} >\r\n                        <Divider />\r\n                        <Link\r\n                            href={`/?type=${getId(type.url)}`}\r\n                            className={classes.link}\r\n                        >\r\n                            <ListItem button >\r\n                                <ListItemIcon>\r\n                                    <DeviceHubIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={type.name} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </React.Fragment>\r\n                )\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default TypeList;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { loadTypeList } from '../../_actions'\r\n\r\nimport TypeList from '../../components/TypeList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        marginTop: 20,\r\n        marginButtom: 20,\r\n        margin: 'auto',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        marginBottom: 10\r\n    }\r\n}));\r\n\r\nconst Types = (props) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        props.loadTypeList()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                Pokemon Types:\r\n            </Typography>\r\n            {props.typeList !== null && <TypeList list={props.typeList.results} />}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        typeList: state.typeListReducer.data,\r\n        message: state.typeListReducer.message,\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { loadTypeList })(Types)\r\n","import types from '../_types'\r\n\r\nimport { loadTypeListRequest } from '../_api'\r\n\r\nexport const loadTypeList = () => async dispatch => {\r\n    const response = await loadTypeListRequest()\r\n    if (response.status === 200) {\r\n        dispatch({ type: types.LOAD_TYPELIST_SUCCESS, payload: response.data })\r\n    }\r\n    else\r\n        dispatch({ type: types.LOAD_TYPELIST_FAILURE, payload: response })\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        margin: 'auto',\r\n        marginTop: 20,\r\n        marginButtom: 20,\r\n    },\r\n    media: {\r\n        height: 320,\r\n    },\r\n});\r\n\r\nconst PokeCard = ({ name, image, abilities, types }) => {\r\n    const classes = useStyles();\r\n\r\n    function getId(text) {\r\n        let l = text.length\r\n        let tmp = text.substring(0, l - 1)\r\n        let n = tmp.lastIndexOf(\"/\")\r\n        let id = tmp.substring(n + 1)\r\n        return id\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={image}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {name}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Abilities :\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {abilities.map((e) => {\r\n                            return `${e.ability.name}, `\r\n                        })}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {types.map(t => {\r\n                    return (\r\n                        <Link key={t.type.name} href={`/?type=${getId(t.type.url)}`} >\r\n                            <Button size=\"small\" color=\"primary\" >\r\n                                {t.type.name}\r\n                            </Button>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PokeCard;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PokeCard from '../../components/PokeCard';\r\n\r\nimport { loadPokeItem } from '../../_actions';\r\n\r\nconst PokeItem = (props) => {\r\n\r\n    const loadItem = () => {\r\n        let href = window.location.href\r\n        let n = href.lastIndexOf(\"/\")\r\n        let id = href.substring(n + 1)\r\n        if (!isNaN(id) && id > 0)\r\n            props.loadPokeItem(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadItem();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {props.pokeItem !== null && (\r\n            <PokeCard \r\n                name={props.pokeItem.name}\r\n                image={props.pokeItem.sprites.front_default}\r\n                abilities={props.pokeItem.abilities}\r\n                types={props.pokeItem.types}\r\n            />\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapState = (state) => {\r\n    return {\r\n        pokeItem: state.pokeItemReducer.data,\r\n        message: state.pokeItemReducer.message,\r\n    }\r\n}\r\n\r\nexport default connect(mapState, { loadPokeItem })(PokeItem)\r\n","import types from '../_types'\r\n\r\nimport { loadPokeItemRequest } from '../_api'\r\n\r\nexport const loadPokeItem = (id) => async dispatch => {\r\n    const response = await loadPokeItemRequest(id)\r\n    if (response.status === 200) {\r\n        dispatch({ type: types.LOAD_POKEITEM_SUCCESS, payload: response.data })\r\n    }\r\n    else\r\n        dispatch({ type: types.LOAD_POKEITEM_FAILURE, payload: response })\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\n\r\nimport Home from './views/Home';\r\nimport Types from './views/Types';\r\nimport PokeItem from './views/PokeItem';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\" title=\"app-container\" >\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Router>\r\n          <Route exact path=\"/\" render={() => <Home />} />\r\n          <Route exact path=\"/types\" render={() => <Types />} />\r\n          <Route path=\"/pokemon\" render={() => <PokeItem />} />\r\n        </Router>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import types from '../_types'\r\n\r\nconst initialState = {\r\n    data: null,\r\n    message: ''\r\n}\r\n\r\nconst pokeListReducer = (state = initialState, action) => {\r\n    const newState = { ...state }\r\n\r\n    switch (action.type) {\r\n        case types.LOAD_POKELIST_SUCCESS: {\r\n            newState.data = action.payload\r\n            newState.message = 'Loading Succesful'\r\n            return newState\r\n        }\r\n        case types.LOAD_POKELIST_FAILURE: {\r\n            newState.data = null\r\n            newState.message = 'Unknown Error'\r\n            return newState\r\n        }\r\n        case types.LOAD_POKELISTBYTYPE_SUCCESS: {\r\n            newState.data = action.payload.pokemon\r\n            newState.message = 'Loading Succesful'\r\n            return newState\r\n        }\r\n        case types.LOAD_POKELISTBYTYPE_FAILURE: {\r\n            newState.data = null\r\n            newState.message = 'Unknown Error'\r\n            return newState\r\n        }\r\n        default: {\r\n            return newState\r\n        }\r\n    }\r\n}\r\n\r\nexport default pokeListReducer\r\n","import types from '../_types'\r\n\r\nconst initialState = {\r\n    data: null,\r\n    message: ''\r\n}\r\n\r\nconst pokeItemReducer = (state = initialState, action) => {\r\n    const newState = { ...state }\r\n\r\n    switch (action.type) {\r\n        case types.LOAD_POKEITEM_SUCCESS: {\r\n            newState.data = action.payload\r\n            newState.message = 'Loading Succesful'\r\n            return newState\r\n        }\r\n        case types.LOAD_POKEITEM_FAILURE: {\r\n            newState.data = null\r\n            newState.message = 'Unknown Error'\r\n            return newState\r\n        }\r\n        default: {\r\n            return newState\r\n        }\r\n    }\r\n}\r\n\r\nexport default pokeItemReducer\r\n","import types from '../_types'\r\n\r\nconst initialState = {\r\n    data: null,\r\n    message: ''\r\n}\r\n\r\nconst typeListReducer = (state = initialState, action) => {\r\n    const newState = { ...state }\r\n\r\n    switch (action.type) {\r\n        case types.LOAD_TYPELIST_SUCCESS: {\r\n            newState.data = action.payload\r\n            newState.message = 'Loading Succesful'\r\n            return newState\r\n        }\r\n        case types.LOAD_TYPELIST_FAILURE: {\r\n            newState.data = null\r\n            newState.message = 'Unknown Error'\r\n            return newState\r\n        }\r\n        default: {\r\n            return newState\r\n        }\r\n    }\r\n}\r\n\r\nexport default typeListReducer\r\n","import { combineReducers } from 'redux'\r\nimport pokeListReducer from './pokeListReducer'\r\nimport pokeItemReducer from './pokeItemReducer'\r\nimport typeListReducer from './typeListReducer'\r\n\r\nexport default combineReducers({\r\n    pokeListReducer: pokeListReducer,\r\n    pokeItemReducer: pokeItemReducer,\r\n    typeListReducer: typeListReducer,    \r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './_reducers/';\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nconst WebApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  )\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nReactDOM.render(<WebApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}